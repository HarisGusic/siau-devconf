#+TITLE: Konfigurator uređaja

Ovaj podmodul ima zadatak da omogući programeru da isprogramira novi pametni
uređaj. Naime, na osnovu odabranih konfiguracijskih parametara se generiše
programski kod koji je zatim potrebno uploadovati na mikrokontroler uređaja
korištenjem [[https://mbed.org][MBED]] platforme. Konfiguracijski parametri se zadaju u JSON formatu.

** OVA DATOTEKA JE U FAZI PREPRAVKE - NEMOJTE ČITATI!

* NAPOMENA: JOŠ UVIJEK NIJE TESTIRANO NA WINDOWS-u - NEMOJTE POKRETATI NI ZA ŽIVU GLAVU!

* Opis principa

  Pošto se razvoj pametne kuće vrši u više iteracija te se paralelno vrši
  razvoj različitih komponenti koje trebaju da budu sinhronizovane, potrebno je
  uniformizirati pristupe. Na primjer tim koji kreira logiku i GUI treba da ima
  uniforman interfejs sa svim uređajima, tako da samo tim koji vrši
  konfiguraciju uređaja mora brinuti o finim detaljima uređaja. Iz tog razloga
  će svi uređaji biti predstavljeni preko JSON datoteka. Ostali timovi mogu ove
  datoteke pročitati kako bi mogli napraviti interfejs sa ovim uređajima.
  Također, ove datoteke će se iskoristiti za generisanje osnovnih C++ source
  predložaka, koje programer uređaja treba da implementira.

  Ovdje će ukratko biti opisan način korištenja ovog podmodula, a u nastavku će
  biti dokumentovane sve funkcije.

* BUILD
  Da bi se izgradio program ~dev-conf~, potrebno je instalirati sljedeće programe.

** Potrebni programi i biblioteke
   - [[https://github.com/open-source-parsers/jsoncpp][jsoncpp]]
   - CMake min. ver. 3.10
   - make
   - python3, docutils (samo za generisanje manpage-a)

   Trebalo bi da se svi ovi alati mogu instalirati korištenjem vašeg omiljenog
   package manager-a.

** Izgradnja
   Potrebno je pokrenuti komandu:
   #+begin_src shell
     make
   #+end_src
   Ovo će kreirati program ~dev-conf~ i manpage, koji će biti smješteni u folderu
   ~_build/~. Alternativno, moguće je pozvati:
   #+begin_src shell
     make app
   #+end_src
   odnosno
   #+begin_src shell
     make man
   #+end_src
   da bi se ove komponente izgradile pojedinačno.

   *NAPOMENA:* Ovako generisan program ~dev-conf~ se smije pozivati samo iz root
   foldera projekta, u suprotnom neće raditi korektno.
   
   Ako je potrebno program kompajlirati direktno iz ~CMakeLists.txt~, ova datoteka
   se nalazi u folderu ~src/.~
   
** Instalacija

   Program ~dev-conf~ se može instalirati korištenjem komande:
   #+begin_src shell
     make install INSTALL_DIR=<DIR>
   #+end_src
   *NAPOMENA:* ~<DIR>~ *mora biti apsolutna putanja. Ovo je od krucijalnog značaja!*
    
   Ako se komanda pozove samo kao ~make install~, tj. ako se ne zada varijabla
   ~INSTALL_DIR~, program će biti instaliran u folderu ~/usr/local~. U tom slučaju
   je potreban ~sudo~ pristup.

* Komanda ~dev-conf~
  
  Ova komanda će se koristiti za generisanje /source datoteka/ na osnovu /JSON
  datoteka/ i predložaka /C++ datoteka/. Dokumentacija (source) ove komande se
  nalazi u datoteci ~docs/man.rst~. Ova dokumentacija se može build-at putem:
  #+begin_src shell
    make man
  #+end_src
  pri čemu će se generisati *Linux Manpage* ~_build/dev-conf.1.gz~. Ovaj manpage se
  može otvoriti korištenjem komande (na Linux-u):
  #+begin_src shell
    man -l _build/dev-conf.1.gz
  #+end_src
  Međutim, source ovog manpage-a je već itekako čitljiv, pogotovo na
  GitHub/GitLab-u.

